/**
 * AdGuard Home
 * AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 
 *
 * OpenAPI spec version: 0.107
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SafeSearchConfig } from '../models/SafeSearchConfig.js';
import { HttpFile } from '../http/http.js';

/**
* Client information.
*/
export class ClientFindSubEntry {
    /**
    * Name
    */
    'name'?: string;
    /**
    * IP, CIDR, MAC, or ClientID.
    */
    'ids'?: Array<string>;
    'useGlobalSettings'?: boolean;
    'filteringEnabled'?: boolean;
    'parentalEnabled'?: boolean;
    'safebrowsingEnabled'?: boolean;
    'safesearchEnabled'?: boolean;
    'safeSearch'?: SafeSearchConfig;
    'useGlobalBlockedServices'?: boolean;
    'blockedServices'?: Array<string>;
    'upstreams'?: Array<string>;
    'whoisInfo'?: { [key: string]: string; };
    /**
    * Whether the client\'s IP is blocked or not. 
    */
    'disallowed'?: boolean;
    /**
    * The rule due to which the client is disallowed.  If disallowed is set to true, and this string is empty, then the client IP is disallowed by the \"allowed IP list\", that is it is not included in the allowed list. 
    */
    'disallowedRule'?: string;
    'ignoreQuerylog'?: boolean;
    'ignoreStatistics'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "ids",
            "baseName": "ids",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "useGlobalSettings",
            "baseName": "use_global_settings",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "filteringEnabled",
            "baseName": "filtering_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "parentalEnabled",
            "baseName": "parental_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "safebrowsingEnabled",
            "baseName": "safebrowsing_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "safesearchEnabled",
            "baseName": "safesearch_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "safeSearch",
            "baseName": "safe_search",
            "type": "SafeSearchConfig",
            "format": ""
        },
        {
            "name": "useGlobalBlockedServices",
            "baseName": "use_global_blocked_services",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "blockedServices",
            "baseName": "blocked_services",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "upstreams",
            "baseName": "upstreams",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "whoisInfo",
            "baseName": "whois_info",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "disallowed",
            "baseName": "disallowed",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "disallowedRule",
            "baseName": "disallowed_rule",
            "type": "string",
            "format": ""
        },
        {
            "name": "ignoreQuerylog",
            "baseName": "ignore_querylog",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "ignoreStatistics",
            "baseName": "ignore_statistics",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ClientFindSubEntry.attributeTypeMap;
    }

    public constructor() {
    }
}

