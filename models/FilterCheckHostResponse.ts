/**
 * AdGuard Home
 * AdGuard Home REST-ish API.  Our admin web interface is built on top of this REST-ish API. 
 *
 * OpenAPI spec version: 0.107
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ResultRule } from '../models/ResultRule.js';
import { HttpFile } from '../http/http.js';

/**
* Check Host Result
*/
export class FilterCheckHostResponse {
    /**
    * Request filtering status.
    */
    'reason'?: FilterCheckHostResponseReasonEnum;
    /**
    * In case if there\'s a rule applied to this DNS request, this is ID of the filter list that the rule belongs to. Deprecated: use `rules[*].filter_list_id` instead. 
    */
    'filterId'?: number;
    /**
    * Filtering rule applied to the request (if any). Deprecated: use `rules[*].text` instead. 
    */
    'rule'?: string;
    /**
    * Applied rules.
    */
    'rules'?: Array<ResultRule>;
    /**
    * Set if reason=FilteredBlockedService
    */
    'serviceName'?: string;
    /**
    * Set if reason=Rewrite
    */
    'cname'?: string;
    /**
    * Set if reason=Rewrite
    */
    'ipAddrs'?: Array<string>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "reason",
            "baseName": "reason",
            "type": "FilterCheckHostResponseReasonEnum",
            "format": ""
        },
        {
            "name": "filterId",
            "baseName": "filter_id",
            "type": "number",
            "format": ""
        },
        {
            "name": "rule",
            "baseName": "rule",
            "type": "string",
            "format": ""
        },
        {
            "name": "rules",
            "baseName": "rules",
            "type": "Array<ResultRule>",
            "format": ""
        },
        {
            "name": "serviceName",
            "baseName": "service_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "cname",
            "baseName": "cname",
            "type": "string",
            "format": ""
        },
        {
            "name": "ipAddrs",
            "baseName": "ip_addrs",
            "type": "Array<string>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return FilterCheckHostResponse.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum FilterCheckHostResponseReasonEnum {
    NotFilteredNotFound = 'NotFilteredNotFound',
    NotFilteredWhiteList = 'NotFilteredWhiteList',
    NotFilteredError = 'NotFilteredError',
    FilteredBlackList = 'FilteredBlackList',
    FilteredSafeBrowsing = 'FilteredSafeBrowsing',
    FilteredParental = 'FilteredParental',
    FilteredInvalid = 'FilteredInvalid',
    FilteredSafeSearch = 'FilteredSafeSearch',
    FilteredBlockedService = 'FilteredBlockedService',
    Rewrite = 'Rewrite',
    RewriteEtcHosts = 'RewriteEtcHosts',
    RewriteRule = 'RewriteRule'
}

